@using Dealership.Data.DataModels.IdentityModels
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model Dealership.Entities.ViewModels.CarsForSale.CarsForSaleDetailsViewModel

<div class="gy-5 gx-5">

    <div class="row my-3">

        <h1 class="text-center">@Model.Brand @Model.ModelName</h1>

    </div>

    <div class="row d-flex flex-column align-items-center my-5">

        <div id="carouselExampleControls" class="carousel slide w-75" data-ride="carousel">

            <div class="carousel-inner">
    
                @foreach(var picture in Model.CarPictures.Select((value, index) => new {index, value}))
                {
                            @if(picture.index == 0)
                            {
                                <div class="carousel-item active">
                                    <img src="~/@picture.value.SlidePath" class="rounded img-fluid d-block w-100"/>
                                </div>
                            }
                            else
                            {
                                 <div class="carousel-item">
                                    <img src="~/@picture.value.SlidePath" class="rounded img-fluid d-block w-100"/>
                                </div>
                            }
                }
    
            </div>

            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
              <span class="carousel-control-prev-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
              <span class="carousel-control-next-icon" aria-hidden="true"></span>
              <span class="visually-hidden">Next</span>
            </button>

        </div>
    

    </div>

    <div class="row my-5">

        <div class="col text-center">

            <h2>General</h2>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Year, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Year)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.BodyType, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.BodyType)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Color, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Color)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Transmission, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Transmission)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Mileage, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Mileage)</lable>

            </div>

        </div>

        <div class="col text-center">

            <h2>Engine</h2>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.EngineType, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.EngineType)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Displacement, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Displacement)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Horsepower, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Horsepower)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.Kilowatts, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.Kilowatts)</lable>

            </div>

            <div class="list-group my-2">
                
                @Html.LabelFor(model => model.NewtonMeters, new { @class = "h5 m-0"})
                <lable>@Html.DisplayFor(model => model.NewtonMeters)</lable>

            </div>

        </div>

    </div>

    <div class="row my-5">
        
        <h2 class="text-center">Description</h2>
        <div class="card mx-5">

            <lable>@Html.DisplayFor(model => model.Description)</lable>

        </div>

    </div>

    <div class="row my-5">

        <div class="col list-group text-center">
            
            @Html.LabelFor(model => model.Price, new { @class = "h2 m-0"})
            <h3>@Html.DisplayFor(model => model.Price)</h3>

        </div>

        <div class="col d-flex flex-column align-items-center">
            
            <h2 class="m-0">Seller</h2>
            <div class="card d-flex align-items-center p-2">

                <img style="border-radius: 100vw; width: 75px"
                     src="~/@Model.ProfilePictureCommonPath">
                <h6>@Html.DisplayFor(model => model.UserName)</h6>
                <lable class="fst-italic">@Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)</lable>
                <lable class="fst-italic">@Html.DisplayFor(model => model.Email)</lable>
                <lable class="fst-italic">@Html.DisplayFor(model => model.PhoneNumber)</lable>

            </div>
            

        </div>

    </div>


    @if (SignInManager.IsSignedIn(User))
{
        
        var user = UserManager.GetUserAsync(User).Result;
        var userRoles = UserManager.GetRolesAsync(user).Result;
        @if (user.Id == Model.SellerId || (userRoles.Contains("SuperAdmin") || userRoles.Contains("Admin") || userRoles.Contains("Moderator")))
        {
            <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
            <a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
        }
}

</div>